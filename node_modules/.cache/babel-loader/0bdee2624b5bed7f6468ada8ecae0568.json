{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\golde\\\\resin\\\\src\\\\EventHandler.js\";\n\n/**\r\n *  Copyright (c) 2015-present, The Regents of the University of California,\r\n *  through Lawrence Berkeley National Laboratory (subject to receipt\r\n *  of any required approvals from the U.S. Dept. of Energy).\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the BSD-style license found in the\r\n *  LICENSE file in the root directory of this source tree.\r\n */\nimport React from \"react\";\nimport ReactDOM from \"react-dom\"; // eslint-disable-line\n\nimport PropTypes from \"prop-types\";\nimport { TimeRange } from \"pondjs\";\nimport getElementOffset from \"./utils/getElementOffset\";\n/**\r\n * Internal component which provides the top level event catcher for the charts.\r\n * This is a higher order component. It wraps a tree of SVG elements below it,\r\n * passed in as this.props.children, and catches events that they do not handle.\r\n *\r\n * The EventHandler is responsible for pan and zoom events as well as other click\r\n * and hover actions.\r\n */\n\nexport default class EventHandler extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isPanning: false,\n      initialPanBegin: null,\n      initialPanEnd: null,\n      initialPanPosition: null\n    };\n    this.handleScrollWheel = this.handleScrollWheel.bind(this);\n    this.handleMouseDown = this.handleMouseDown.bind(this);\n    this.handleMouseUp = this.handleMouseUp.bind(this);\n    this.handleMouseOut = this.handleMouseOut.bind(this);\n    this.handleMouseMove = this.handleMouseMove.bind(this);\n    this.handleContextMenu = this.handleContextMenu.bind(this);\n  }\n\n  componentDidMount() {\n    this.eventHandlerRef.addEventListener(\"wheel\", this.handleScrollWheel, {\n      passive: false\n    });\n  } // get the event mouse position relative to the event rect\n\n\n  getOffsetMousePosition(e) {\n    const offset = getElementOffset(this.eventRect);\n    const x = e.pageX - offset.left;\n    const y = e.pageY - offset.top;\n    return [Math.round(x), Math.round(y)];\n  } //\n  // Event handlers\n  //\n\n\n  handleScrollWheel(e) {\n    if (!this.props.enablePanZoom && !this.props.enableDragZoom) {\n      return;\n    }\n\n    e.preventDefault();\n    const SCALE_FACTOR = 0.001;\n    let scale = 1 + e.deltaY * SCALE_FACTOR;\n\n    if (scale > 3) {\n      scale = 3;\n    }\n\n    if (scale < 0.1) {\n      scale = 0.1;\n    }\n\n    const xy = this.getOffsetMousePosition(e);\n    const begin = this.props.scale.domain()[0].getTime();\n    const end = this.props.scale.domain()[1].getTime();\n    const center = this.props.scale.invert(xy[0]).getTime();\n    let beginScaled = center - parseInt((center - begin) * scale, 10);\n    let endScaled = center + parseInt((end - center) * scale, 10); // Duration constraint\n\n    let duration = (end - begin) * scale;\n\n    if (this.props.minDuration) {\n      const minDuration = parseInt(this.props.minDuration, 10);\n\n      if (duration < this.props.minDuration) {\n        beginScaled = center - (center - begin) / (end - begin) * minDuration;\n        endScaled = center + (end - center) / (end - begin) * minDuration;\n      }\n    }\n\n    if (this.props.minTime && this.props.maxTime) {\n      const maxDuration = this.props.maxTime.getTime() - this.props.minTime.getTime();\n\n      if (duration > maxDuration) {\n        duration = maxDuration;\n      }\n    } // Range constraint\n\n\n    if (this.props.minTime && beginScaled < this.props.minTime.getTime()) {\n      beginScaled = this.props.minTime.getTime();\n      endScaled = beginScaled + duration;\n    }\n\n    if (this.props.maxTime && endScaled > this.props.maxTime.getTime()) {\n      endScaled = this.props.maxTime.getTime();\n      beginScaled = endScaled - duration;\n    }\n\n    const newBegin = new Date(beginScaled);\n    const newEnd = new Date(endScaled);\n    const newTimeRange = new TimeRange(newBegin, newEnd);\n\n    if (this.props.onZoom) {\n      this.props.onZoom(newTimeRange);\n    }\n  }\n\n  handleMouseDown(e) {\n    if (!this.props.enablePanZoom && !this.props.enableDragZoom) {\n      return;\n    }\n\n    if (e.button === 2) {\n      return;\n    }\n\n    e.preventDefault();\n    document.addEventListener(\"mouseover\", this.handleMouseMove);\n    document.addEventListener(\"mouseup\", this.handleMouseUp);\n\n    if (this.props.enableDragZoom) {\n      const offsetxy = this.getOffsetMousePosition(e);\n      this.setState({\n        isDragging: true,\n        initialDragZoom: offsetxy[0],\n        currentDragZoom: offsetxy[0]\n      });\n    }\n\n    if (this.props.enablePanZoom) {\n      const x = e.pageX;\n      const y = e.pageY;\n      const xy0 = [Math.round(x), Math.round(y)];\n      const begin = this.props.scale.domain()[0].getTime();\n      const end = this.props.scale.domain()[1].getTime();\n      this.setState({\n        isPanning: true,\n        initialPanBegin: begin,\n        initialPanEnd: end,\n        initialPanPosition: xy0\n      });\n    }\n\n    return false;\n  }\n\n  handleMouseUp(e) {\n    if (!this.props.onMouseClick && !this.props.enablePanZoom && !this.props.enableDragZoom) {\n      return;\n    }\n\n    e.stopPropagation();\n    document.removeEventListener(\"mouseover\", this.handleMouseMove);\n    document.removeEventListener(\"mouseup\", this.handleMouseUp);\n    const offsetxy = this.getOffsetMousePosition(e);\n    const x = e.pageX;\n    const isPanning = this.state.initialPanPosition && Math.abs(x - this.state.initialPanPosition[0]) > 2;\n    const isDragging = this.state.initialDragZoom && Math.abs(offsetxy[0] - this.state.initialDragZoom) > 2;\n\n    if (this.props.onMouseClick && !isPanning && !isDragging) {\n      this.props.onMouseClick(offsetxy[0], offsetxy[1]);\n    }\n\n    if (this.props.enableDragZoom) {\n      if (isDragging) {\n        const start = this.props.scale.invert(this.state.initialDragZoom).getTime();\n        const end = this.props.scale.invert(this.state.currentDragZoom).getTime();\n        let newBegin = parseInt(start, 10);\n        let newEnd = parseInt(end, 10);\n\n        if (this.props.minTime && newBegin < this.props.minTime.getTime()) {\n          newBegin = this.props.minTime.getTime();\n        }\n\n        if (this.props.maxTime && newEnd > this.props.maxTime.getTime()) {\n          newEnd = this.props.maxTime.getTime();\n        }\n\n        const newTimeRange = new TimeRange([newBegin, newEnd].sort());\n\n        if (this.props.onZoom) {\n          this.props.onZoom(newTimeRange);\n        }\n      }\n\n      this.setState({\n        isDragging: false,\n        initialDragZoom: null,\n        initialPanEnd: null,\n        currentDragZoom: null\n      });\n    }\n\n    if (this.props.enablePanZoom) {\n      this.setState({\n        isPanning: false,\n        initialPanBegin: null,\n        initialPanEnd: null,\n        initialPanPosition: null\n      });\n    }\n  }\n\n  handleMouseOut(e) {\n    e.preventDefault();\n\n    if (this.props.onMouseOut) {\n      this.props.onMouseOut();\n    }\n  }\n\n  handleMouseMove(e) {\n    e.preventDefault();\n    const x = e.pageX;\n    const y = e.pageY;\n    const xy = [Math.round(x), Math.round(y)];\n    const offsetxy = this.getOffsetMousePosition(e);\n\n    if (this.state.isDragging) {\n      this.setState({\n        currentDragZoom: offsetxy[0]\n      });\n    }\n\n    if (this.state.isPanning) {\n      const xy0 = this.state.initialPanPosition;\n      const timeOffset = this.props.scale.invert(xy[0]).getTime() - this.props.scale.invert(xy0[0]).getTime();\n      let newBegin = parseInt(this.state.initialPanBegin - timeOffset, 10);\n      let newEnd = parseInt(this.state.initialPanEnd - timeOffset, 10);\n      const duration = parseInt(this.state.initialPanEnd - this.state.initialPanBegin, 10);\n\n      if (this.props.minTime && newBegin < this.props.minTime.getTime()) {\n        newBegin = this.props.minTime.getTime();\n        newEnd = newBegin + duration;\n      }\n\n      if (this.props.maxTime && newEnd > this.props.maxTime.getTime()) {\n        newEnd = this.props.maxTime.getTime();\n        newBegin = newEnd - duration;\n      }\n\n      const newTimeRange = new TimeRange(newBegin, newEnd);\n\n      if (this.props.onZoom) {\n        this.props.onZoom(newTimeRange);\n      }\n    } else if (this.props.onMouseMove) {\n      const mousePosition = this.getOffsetMousePosition(e);\n\n      if (this.props.onMouseMove) {\n        this.props.onMouseMove(mousePosition[0], mousePosition[1]);\n      }\n    }\n  }\n\n  handleContextMenu(e) {\n    var x = e.pageX;\n    var y = e.pageY;\n\n    if (this.props.onContextMenu) {\n      this.props.onContextMenu(x, y);\n    }\n  } //\n  // Render\n  //\n\n\n  render() {\n    const cursor = this.state.isPanning ? \"-webkit-grabbing\" : \"default\";\n    const handlers = {\n      onMouseDown: this.handleMouseDown,\n      onMouseMove: this.handleMouseMove,\n      onMouseOut: this.handleMouseOut,\n      onMouseUp: this.handleMouseUp,\n      onContextMenu: this.handleContextMenu\n    };\n    return React.createElement(\"g\", Object.assign({\n      pointerEvents: \"all\",\n      ref: c => {\n        this.eventHandlerRef = c;\n      }\n    }, handlers, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    }), React.createElement(\"rect\", {\n      key: \"handler-hit-rect\",\n      ref: c => {\n        this.eventRect = c;\n      },\n      style: {\n        fill: \"#000\",\n        opacity: 0.0,\n        cursor\n      },\n      x: 0,\n      y: 0,\n      width: this.props.width,\n      height: this.props.height,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }), this.props.children, this.state.isDragging && React.createElement(\"rect\", {\n      style: {\n        opacity: 0.3,\n        fill: \"grey\"\n      },\n      x: Math.min(this.state.currentDragZoom, this.state.initialDragZoom),\n      y: 0,\n      width: Math.abs(this.state.currentDragZoom - this.state.initialDragZoom),\n      height: this.props.height,\n      pointerEvents: \"none\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339\n      },\n      __self: this\n    }));\n  }\n\n}\nEventHandler.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\n  enablePanZoom: PropTypes.bool,\n  enableDragZoom: PropTypes.bool,\n  scale: PropTypes.func.isRequired,\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  maxTime: PropTypes.instanceOf(Date),\n  minTime: PropTypes.instanceOf(Date),\n  minDuration: PropTypes.number,\n  onZoom: PropTypes.func,\n  onMouseMove: PropTypes.func,\n  onMouseOut: PropTypes.func,\n  onMouseClick: PropTypes.func,\n  onContextMenu: PropTypes.func\n};\nEventHandler.defaultProps = {\n  enablePanZoom: false,\n  enableDragZoom: false\n};","map":{"version":3,"sources":["C:\\Users\\golde\\resin\\src\\EventHandler.js"],"names":["React","ReactDOM","PropTypes","TimeRange","getElementOffset","EventHandler","Component","constructor","props","state","isPanning","initialPanBegin","initialPanEnd","initialPanPosition","handleScrollWheel","bind","handleMouseDown","handleMouseUp","handleMouseOut","handleMouseMove","handleContextMenu","componentDidMount","eventHandlerRef","addEventListener","passive","getOffsetMousePosition","e","offset","eventRect","x","pageX","left","y","pageY","top","Math","round","enablePanZoom","enableDragZoom","preventDefault","SCALE_FACTOR","scale","deltaY","xy","begin","domain","getTime","end","center","invert","beginScaled","parseInt","endScaled","duration","minDuration","minTime","maxTime","maxDuration","newBegin","Date","newEnd","newTimeRange","onZoom","button","document","offsetxy","setState","isDragging","initialDragZoom","currentDragZoom","xy0","onMouseClick","stopPropagation","removeEventListener","abs","start","sort","onMouseOut","timeOffset","onMouseMove","mousePosition","onContextMenu","render","cursor","handlers","onMouseDown","onMouseUp","c","fill","opacity","width","height","children","min","propTypes","oneOfType","arrayOf","node","bool","func","isRequired","number","instanceOf","defaultProps"],"mappings":"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","sourcesContent":["/**\r\n *  Copyright (c) 2015-present, The Regents of the University of California,\r\n *  through Lawrence Berkeley National Laboratory (subject to receipt\r\n *  of any required approvals from the U.S. Dept. of Energy).\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the BSD-style license found in the\r\n *  LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\"; // eslint-disable-line\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { TimeRange } from \"pondjs\";\r\n\r\nimport getElementOffset from \"./utils/getElementOffset\";\r\n\r\n/**\r\n * Internal component which provides the top level event catcher for the charts.\r\n * This is a higher order component. It wraps a tree of SVG elements below it,\r\n * passed in as this.props.children, and catches events that they do not handle.\r\n *\r\n * The EventHandler is responsible for pan and zoom events as well as other click\r\n * and hover actions.\r\n */\r\nexport default class EventHandler extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isPanning: false,\r\n      initialPanBegin: null,\r\n      initialPanEnd: null,\r\n      initialPanPosition: null\r\n    };\r\n\r\n    this.handleScrollWheel = this.handleScrollWheel.bind(this);\r\n    this.handleMouseDown = this.handleMouseDown.bind(this);\r\n    this.handleMouseUp = this.handleMouseUp.bind(this);\r\n    this.handleMouseOut = this.handleMouseOut.bind(this);\r\n    this.handleMouseMove = this.handleMouseMove.bind(this);\r\n    this.handleContextMenu = this.handleContextMenu.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.eventHandlerRef.addEventListener(\"wheel\", this.handleScrollWheel, {\r\n      passive: false\r\n    });\r\n  }\r\n\r\n  // get the event mouse position relative to the event rect\r\n  getOffsetMousePosition(e) {\r\n    const offset = getElementOffset(this.eventRect);\r\n    const x = e.pageX - offset.left;\r\n    const y = e.pageY - offset.top;\r\n    return [Math.round(x), Math.round(y)];\r\n  }\r\n\r\n  //\r\n  // Event handlers\r\n  //\r\n\r\n  handleScrollWheel(e) {\r\n    if (!this.props.enablePanZoom && !this.props.enableDragZoom) {\r\n      return;\r\n    }\r\n\r\n    e.preventDefault();\r\n\r\n    const SCALE_FACTOR = 0.001;\r\n    let scale = 1 + e.deltaY * SCALE_FACTOR;\r\n    if (scale > 3) {\r\n      scale = 3;\r\n    }\r\n    if (scale < 0.1) {\r\n      scale = 0.1;\r\n    }\r\n\r\n    const xy = this.getOffsetMousePosition(e);\r\n\r\n    const begin = this.props.scale.domain()[0].getTime();\r\n    const end = this.props.scale.domain()[1].getTime();\r\n    const center = this.props.scale.invert(xy[0]).getTime();\r\n\r\n    let beginScaled = center - parseInt((center - begin) * scale, 10);\r\n    let endScaled = center + parseInt((end - center) * scale, 10);\r\n\r\n    // Duration constraint\r\n    let duration = (end - begin) * scale;\r\n\r\n    if (this.props.minDuration) {\r\n      const minDuration = parseInt(this.props.minDuration, 10);\r\n      if (duration < this.props.minDuration) {\r\n        beginScaled = center - ((center - begin) / (end - begin)) * minDuration;\r\n        endScaled = center + ((end - center) / (end - begin)) * minDuration;\r\n      }\r\n    }\r\n\r\n    if (this.props.minTime && this.props.maxTime) {\r\n      const maxDuration =\r\n        this.props.maxTime.getTime() - this.props.minTime.getTime();\r\n      if (duration > maxDuration) {\r\n        duration = maxDuration;\r\n      }\r\n    }\r\n\r\n    // Range constraint\r\n    if (this.props.minTime && beginScaled < this.props.minTime.getTime()) {\r\n      beginScaled = this.props.minTime.getTime();\r\n      endScaled = beginScaled + duration;\r\n    }\r\n\r\n    if (this.props.maxTime && endScaled > this.props.maxTime.getTime()) {\r\n      endScaled = this.props.maxTime.getTime();\r\n      beginScaled = endScaled - duration;\r\n    }\r\n\r\n    const newBegin = new Date(beginScaled);\r\n    const newEnd = new Date(endScaled);\r\n\r\n    const newTimeRange = new TimeRange(newBegin, newEnd);\r\n\r\n    if (this.props.onZoom) {\r\n      this.props.onZoom(newTimeRange);\r\n    }\r\n  }\r\n\r\n  handleMouseDown(e) {\r\n    if (!this.props.enablePanZoom && !this.props.enableDragZoom) {\r\n      return;\r\n    }\r\n\r\n    if (e.button === 2) {\r\n      return;\r\n    }\r\n\r\n    e.preventDefault();\r\n\r\n    document.addEventListener(\"mouseover\", this.handleMouseMove);\r\n    document.addEventListener(\"mouseup\", this.handleMouseUp);\r\n\r\n    if (this.props.enableDragZoom) {\r\n      const offsetxy = this.getOffsetMousePosition(e);\r\n      this.setState({\r\n        isDragging: true,\r\n        initialDragZoom: offsetxy[0],\r\n        currentDragZoom: offsetxy[0]\r\n      });\r\n    }\r\n\r\n    if (this.props.enablePanZoom) {\r\n      const x = e.pageX;\r\n      const y = e.pageY;\r\n      const xy0 = [Math.round(x), Math.round(y)];\r\n\r\n      const begin = this.props.scale.domain()[0].getTime();\r\n      const end = this.props.scale.domain()[1].getTime();\r\n\r\n      this.setState({\r\n        isPanning: true,\r\n        initialPanBegin: begin,\r\n        initialPanEnd: end,\r\n        initialPanPosition: xy0\r\n      });\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  handleMouseUp(e) {\r\n    if (\r\n      !this.props.onMouseClick &&\r\n      !this.props.enablePanZoom &&\r\n      !this.props.enableDragZoom\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    e.stopPropagation();\r\n\r\n    document.removeEventListener(\"mouseover\", this.handleMouseMove);\r\n    document.removeEventListener(\"mouseup\", this.handleMouseUp);\r\n\r\n    const offsetxy = this.getOffsetMousePosition(e);\r\n\r\n    const x = e.pageX;\r\n    const isPanning =\r\n      this.state.initialPanPosition &&\r\n      Math.abs(x - this.state.initialPanPosition[0]) > 2;\r\n    const isDragging =\r\n      this.state.initialDragZoom &&\r\n      Math.abs(offsetxy[0] - this.state.initialDragZoom) > 2;\r\n\r\n    if (this.props.onMouseClick && !isPanning && !isDragging) {\r\n      this.props.onMouseClick(offsetxy[0], offsetxy[1]);\r\n    }\r\n\r\n    if (this.props.enableDragZoom) {\r\n      if (isDragging) {\r\n        const start = this.props.scale\r\n          .invert(this.state.initialDragZoom)\r\n          .getTime();\r\n        const end = this.props.scale\r\n          .invert(this.state.currentDragZoom)\r\n          .getTime();\r\n\r\n        let newBegin = parseInt(start, 10);\r\n        let newEnd = parseInt(end, 10);\r\n\r\n        if (this.props.minTime && newBegin < this.props.minTime.getTime()) {\r\n          newBegin = this.props.minTime.getTime();\r\n        }\r\n\r\n        if (this.props.maxTime && newEnd > this.props.maxTime.getTime()) {\r\n          newEnd = this.props.maxTime.getTime();\r\n        }\r\n\r\n        const newTimeRange = new TimeRange([newBegin, newEnd].sort());\r\n        if (this.props.onZoom) {\r\n          this.props.onZoom(newTimeRange);\r\n        }\r\n      }\r\n\r\n      this.setState({\r\n        isDragging: false,\r\n        initialDragZoom: null,\r\n        initialPanEnd: null,\r\n        currentDragZoom: null\r\n      });\r\n    }\r\n\r\n    if (this.props.enablePanZoom) {\r\n      this.setState({\r\n        isPanning: false,\r\n        initialPanBegin: null,\r\n        initialPanEnd: null,\r\n        initialPanPosition: null\r\n      });\r\n    }\r\n  }\r\n\r\n  handleMouseOut(e) {\r\n    e.preventDefault();\r\n\r\n    if (this.props.onMouseOut) {\r\n      this.props.onMouseOut();\r\n    }\r\n  }\r\n\r\n  handleMouseMove(e) {\r\n    e.preventDefault();\r\n    const x = e.pageX;\r\n    const y = e.pageY;\r\n    const xy = [Math.round(x), Math.round(y)];\r\n    const offsetxy = this.getOffsetMousePosition(e);\r\n    if (this.state.isDragging) {\r\n      this.setState({\r\n        currentDragZoom: offsetxy[0]\r\n      });\r\n    }\r\n    if (this.state.isPanning) {\r\n      const xy0 = this.state.initialPanPosition;\r\n      const timeOffset =\r\n        this.props.scale.invert(xy[0]).getTime() -\r\n        this.props.scale.invert(xy0[0]).getTime();\r\n\r\n      let newBegin = parseInt(this.state.initialPanBegin - timeOffset, 10);\r\n      let newEnd = parseInt(this.state.initialPanEnd - timeOffset, 10);\r\n      const duration = parseInt(\r\n        this.state.initialPanEnd - this.state.initialPanBegin,\r\n        10\r\n      );\r\n\r\n      if (this.props.minTime && newBegin < this.props.minTime.getTime()) {\r\n        newBegin = this.props.minTime.getTime();\r\n        newEnd = newBegin + duration;\r\n      }\r\n\r\n      if (this.props.maxTime && newEnd > this.props.maxTime.getTime()) {\r\n        newEnd = this.props.maxTime.getTime();\r\n        newBegin = newEnd - duration;\r\n      }\r\n\r\n      const newTimeRange = new TimeRange(newBegin, newEnd);\r\n      if (this.props.onZoom) {\r\n        this.props.onZoom(newTimeRange);\r\n      }\r\n    } else if (this.props.onMouseMove) {\r\n      const mousePosition = this.getOffsetMousePosition(e);\r\n      if (this.props.onMouseMove) {\r\n        this.props.onMouseMove(mousePosition[0], mousePosition[1]);\r\n      }\r\n    }\r\n  }\r\n\r\n  handleContextMenu(e) {\r\n    var x = e.pageX;\r\n    var y = e.pageY;\r\n    if (this.props.onContextMenu) {\r\n      this.props.onContextMenu(x, y);\r\n    }\r\n  }\r\n\r\n  //\r\n  // Render\r\n  //\r\n\r\n  render() {\r\n    const cursor = this.state.isPanning ? \"-webkit-grabbing\" : \"default\";\r\n    const handlers = {\r\n      onMouseDown: this.handleMouseDown,\r\n      onMouseMove: this.handleMouseMove,\r\n      onMouseOut: this.handleMouseOut,\r\n      onMouseUp: this.handleMouseUp,\r\n      onContextMenu: this.handleContextMenu\r\n    };\r\n    return (\r\n      <g\r\n        pointerEvents=\"all\"\r\n        ref={c => {\r\n          this.eventHandlerRef = c;\r\n        }}\r\n        {...handlers}\r\n      >\r\n        <rect\r\n          key=\"handler-hit-rect\"\r\n          ref={c => {\r\n            this.eventRect = c;\r\n          }}\r\n          style={{ fill: \"#000\", opacity: 0.0, cursor }}\r\n          x={0}\r\n          y={0}\r\n          width={this.props.width}\r\n          height={this.props.height}\r\n        />\r\n        {this.props.children}\r\n        {this.state.isDragging && (\r\n          <rect\r\n            style={{ opacity: 0.3, fill: \"grey\" }}\r\n            x={Math.min(this.state.currentDragZoom, this.state.initialDragZoom)}\r\n            y={0}\r\n            width={Math.abs(\r\n              this.state.currentDragZoom - this.state.initialDragZoom\r\n            )}\r\n            height={this.props.height}\r\n            pointerEvents=\"none\"\r\n          />\r\n        )}\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nEventHandler.propTypes = {\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node\r\n  ]),\r\n  enablePanZoom: PropTypes.bool,\r\n  enableDragZoom: PropTypes.bool,\r\n  scale: PropTypes.func.isRequired,\r\n  width: PropTypes.number.isRequired,\r\n  height: PropTypes.number.isRequired,\r\n  maxTime: PropTypes.instanceOf(Date),\r\n  minTime: PropTypes.instanceOf(Date),\r\n  minDuration: PropTypes.number,\r\n  onZoom: PropTypes.func,\r\n  onMouseMove: PropTypes.func,\r\n  onMouseOut: PropTypes.func,\r\n  onMouseClick: PropTypes.func,\r\n  onContextMenu: PropTypes.func\r\n};\r\n\r\nEventHandler.defaultProps = {\r\n  enablePanZoom: false,\r\n  enableDragZoom: false\r\n};\r\n"]},"metadata":{},"sourceType":"module"}