{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\golde\\\\resin\\\\src\\\\Label.js\";\n\n/**\r\n *  Copyright (c) 2016, The Regents of the University of California,\r\n *  through Lawrence Berkeley National Laboratory (subject to receipt\r\n *  of any required approvals from the U.S. Dept. of Energy).\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the BSD-style license found in the\r\n *  LICENSE file in the root directory of this source tree.\r\n */\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport merge from \"merge\";\nconst defaultBoxStyle = {\n  fill: \"#FEFEFE\",\n  stroke: \"#DDD\",\n  opacity: 0.8\n};\nconst defaultTextStyle = {\n  fontSize: 11,\n  textAnchor: \"left\",\n  fill: \"#b0b0b0\",\n  pointerEvents: \"none\"\n};\nconst defaultTextStyleCentered = {\n  fontSize: 11,\n  textAnchor: \"middle\",\n  fill: \"#bdbdbd\",\n  pointerEvents: \"none\"\n};\n\nfunction mergeStyles(style, isCentered) {\n  return {\n    boxStyle: merge(true, defaultBoxStyle, style.box ? style.box : {}),\n    labelStyle: merge(true, isCentered ? defaultTextStyleCentered : defaultTextStyle, style.label ? style.label : {})\n  };\n}\n/**\r\n * Renders a simple label surrounded by a box within in svg\r\n *\r\n *      +----------------+\r\n *      | My label       |\r\n *      |                |\r\n *      +----------------+\r\n */\n\n\nconst Label = ({\n  label,\n  style,\n  align,\n  width,\n  height\n}) => {\n  const _mergeStyles = mergeStyles(style, align === \"center\"),\n        boxStyle = _mergeStyles.boxStyle,\n        labelStyle = _mergeStyles.labelStyle;\n\n  const posx = align === \"center\" ? parseInt(width / 2, 10) : 10;\n  const text = React.createElement(\"text\", {\n    x: posx,\n    y: 5,\n    dy: \"1.2em\",\n    style: labelStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, label);\n  const box = React.createElement(\"rect\", {\n    x: 0,\n    y: 0,\n    style: boxStyle,\n    width: width,\n    height: height,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  });\n  return React.createElement(\"g\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, box, text);\n};\n\nLabel.defaultProps = {\n  align: \"center\",\n  width: 100,\n  height: 100,\n  pointerEvents: \"none\"\n};\nLabel.propTypes = {\n  /**\r\n   * Where to position the label, either \"left\" or \"center\" within the box\r\n   */\n  align: PropTypes.oneOf([\"center\", \"left\"]),\n\n  /**\r\n   * The label to render\r\n   */\n  label: PropTypes.string.isRequired,\n\n  /**\r\n   * The style of the label. This is the inline CSS applied directly\r\n   * to the label box\r\n   */\n  style: PropTypes.object,\n  // eslint-disable-line\n\n  /**\r\n   * The width of the rectangle to render into\r\n   */\n  width: PropTypes.number,\n\n  /**\r\n   * The height of the rectangle to render into\r\n   */\n  height: PropTypes.number\n};\nexport default Label;","map":{"version":3,"sources":["C:\\Users\\golde\\resin\\src\\Label.js"],"names":["React","PropTypes","merge","defaultBoxStyle","fill","stroke","opacity","defaultTextStyle","fontSize","textAnchor","pointerEvents","defaultTextStyleCentered","mergeStyles","style","isCentered","boxStyle","box","labelStyle","label","Label","align","width","height","posx","parseInt","text","defaultProps","propTypes","oneOf","string","isRequired","object","number"],"mappings":"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","sourcesContent":["/**\r\n *  Copyright (c) 2016, The Regents of the University of California,\r\n *  through Lawrence Berkeley National Laboratory (subject to receipt\r\n *  of any required approvals from the U.S. Dept. of Energy).\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the BSD-style license found in the\r\n *  LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport merge from \"merge\";\r\n\r\nconst defaultBoxStyle = {\r\n    fill: \"#FEFEFE\",\r\n    stroke: \"#DDD\",\r\n    opacity: 0.8\r\n};\r\n\r\nconst defaultTextStyle = {\r\n    fontSize: 11,\r\n    textAnchor: \"left\",\r\n    fill: \"#b0b0b0\",\r\n    pointerEvents: \"none\"\r\n};\r\n\r\nconst defaultTextStyleCentered = {\r\n    fontSize: 11,\r\n    textAnchor: \"middle\",\r\n    fill: \"#bdbdbd\",\r\n    pointerEvents: \"none\"\r\n};\r\n\r\nfunction mergeStyles(style, isCentered) {\r\n    return {\r\n        boxStyle: merge(true, defaultBoxStyle, style.box ? style.box : {}),\r\n        labelStyle: merge(\r\n            true,\r\n            isCentered ? defaultTextStyleCentered : defaultTextStyle,\r\n            style.label ? style.label : {}\r\n        )\r\n    };\r\n}\r\n\r\n/**\r\n * Renders a simple label surrounded by a box within in svg\r\n *\r\n *      +----------------+\r\n *      | My label       |\r\n *      |                |\r\n *      +----------------+\r\n */\r\n\r\nconst Label = ({ label, style, align, width, height }) => {\r\n    const { boxStyle, labelStyle } = mergeStyles(style, align === \"center\");\r\n\r\n    const posx = align === \"center\" ? parseInt(width / 2, 10) : 10;\r\n\r\n    const text = (\r\n        <text x={posx} y={5} dy=\"1.2em\" style={labelStyle}>\r\n            {label}\r\n        </text>\r\n    );\r\n\r\n    const box = <rect x={0} y={0} style={boxStyle} width={width} height={height} />;\r\n\r\n    return (\r\n        <g>\r\n            {box}\r\n            {text}\r\n        </g>\r\n    );\r\n};\r\n\r\nLabel.defaultProps = {\r\n    align: \"center\",\r\n    width: 100,\r\n    height: 100,\r\n    pointerEvents: \"none\"\r\n};\r\n\r\nLabel.propTypes = {\r\n    /**\r\n     * Where to position the label, either \"left\" or \"center\" within the box\r\n     */\r\n    align: PropTypes.oneOf([\"center\", \"left\"]),\r\n\r\n    /**\r\n     * The label to render\r\n     */\r\n    label: PropTypes.string.isRequired,\r\n\r\n    /**\r\n     * The style of the label. This is the inline CSS applied directly\r\n     * to the label box\r\n     */\r\n    style: PropTypes.object, // eslint-disable-line\r\n\r\n    /**\r\n     * The width of the rectangle to render into\r\n     */\r\n    width: PropTypes.number,\r\n\r\n    /**\r\n     * The height of the rectangle to render into\r\n     */\r\n    height: PropTypes.number\r\n};\r\n\r\nexport default Label;\r\n"]},"metadata":{},"sourceType":"module"}