{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\golde\\\\resin\\\\src\\\\Map.js\";\nimport React from \"react\";\nimport { withGoogleMap, GoogleMap, Marker, InfoWindow, withScriptjs, OverlayView } from \"react-google-maps\";\nimport DataPanel from \"./DataPanel\";\nimport { css } from \"glamor\";\nimport { compose, withStateHandlers, withProps } from \"recompose\";\nimport { islandCss } from \"./Dashboard\";\nconst Map = compose(withStateHandlers(() => ({\n  isOpen: false,\n  isClicked: false\n}), {\n  onToggleOpen: ({\n    isOpen\n  }) => () => ({\n    isOpen: !isOpen\n  }),\n  onClicked: ({\n    isClicked\n  }) => () => ({\n    isClicked: !isClicked\n  })\n}), withScriptjs, withGoogleMap)(props => React.createElement(GoogleMap, {\n  defaultZoom: 12,\n  defaultCenter: {\n    lat: -34.397,\n    lng: 150.644\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33\n  },\n  __self: this\n}, props.isMarkerShown && React.createElement(Marker, {\n  position: {\n    lat: -34.397,\n    lng: 150.644\n  },\n  onClick: props.onClicked,\n  onMouseOver: props.onToggleOpen,\n  onMouseOut: props.onToggleOpen,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35\n  },\n  __self: this\n}, props.isOpen && React.createElement(InfoWindow, {\n  onCloseClick: props.onToggleOpen,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43\n  },\n  __self: this\n}, React.createElement(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44\n  },\n  __self: this\n}, \"Showing something in the info window\"))), props.isClicked && React.createElement(OverlayView, {\n  position: {\n    lat: -34.397,\n    lng: 150.644\n  },\n  mapPaneName: OverlayView.OVERLAY_MOUSE_TARGET,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  style: {\n    background: \"white\",\n    border: \"1px solid #ccc\",\n    padding: 15\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 53\n  },\n  __self: this\n}, React.createElement(\"h1\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 60\n  },\n  __self: this\n}, \"Overlay View\"), React.createElement(\"button\", {\n  onClick: props.onClicked,\n  style: {\n    left: \"91%\",\n    top: \"10%\",\n    position: \"absolute\"\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 61\n  },\n  __self: this\n}, \"X\"), React.createElement(DataPanel, {\n  items: [{\n    name: \"road seg type\",\n    value: \"intersection\"\n  }, {\n    name: \"terrain type\",\n    value: \"built up\"\n  }, {\n    name: \"road type\",\n    value: \"normal\"\n  }],\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 67\n  },\n  __self: this\n}))))));\nconst mapCss = css({\n  width: \"100%\"\n});\nexport default (props => React.createElement(\"div\", {\n  className: \"\".concat(islandCss, \" \").concat(mapCss),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 87\n  },\n  __self: this\n}, React.createElement(Map, {\n  googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyD64mBstzTUD74x9B8ZZc5jp2gQvHWeBHk\",\n  loadingElement: React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }),\n  containerElement: React.createElement(\"div\", {\n    style: {\n      height: \"100%\",\n      width: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }),\n  mapElement: React.createElement(\"div\", {\n    style: {\n      height: \"100%\",\n      width: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 88\n  },\n  __self: this\n})));","map":{"version":3,"sources":["C:\\Users\\golde\\resin\\src\\Map.js"],"names":["React","withGoogleMap","GoogleMap","Marker","InfoWindow","withScriptjs","OverlayView","DataPanel","css","compose","withStateHandlers","withProps","islandCss","Map","isOpen","isClicked","onToggleOpen","onClicked","props","lat","lng","isMarkerShown","OVERLAY_MOUSE_TARGET","background","border","padding","left","top","position","name","value","mapCss","width","height"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {\r\n  withGoogleMap,\r\n  GoogleMap,\r\n  Marker,\r\n  InfoWindow,\r\n  withScriptjs,\r\n  OverlayView\r\n} from \"react-google-maps\";\r\nimport DataPanel from \"./DataPanel\";\r\nimport { css } from \"glamor\";\r\nimport { compose, withStateHandlers, withProps } from \"recompose\";\r\nimport { islandCss } from \"./Dashboard\";\r\n\r\nconst Map = compose(\r\n  withStateHandlers(\r\n    () => ({\r\n      isOpen: false,\r\n      isClicked: false\r\n    }),\r\n    {\r\n      onToggleOpen: ({ isOpen }) => () => ({\r\n        isOpen: !isOpen\r\n      }),\r\n      onClicked: ({ isClicked }) => () => ({\r\n        isClicked: !isClicked\r\n      })\r\n    }\r\n  ),\r\n  withScriptjs,\r\n  withGoogleMap\r\n)(props => (\r\n  <GoogleMap defaultZoom={12} defaultCenter={{ lat: -34.397, lng: 150.644 }}>\r\n    {props.isMarkerShown && (\r\n      <Marker\r\n        position={{ lat: -34.397, lng: 150.644 }}\r\n        onClick={props.onClicked}\r\n        onMouseOver={props.onToggleOpen}\r\n        onMouseOut={props.onToggleOpen}\r\n      >\r\n        {props.isOpen && (\r\n          <InfoWindow onCloseClick={props.onToggleOpen}>\r\n            <div>\r\n              <p>{\"Showing something in the info window\"}</p>\r\n            </div>\r\n          </InfoWindow>\r\n        )}\r\n        {props.isClicked && (\r\n          <OverlayView\r\n            position={{ lat: -34.397, lng: 150.644 }}\r\n            mapPaneName={OverlayView.OVERLAY_MOUSE_TARGET}\r\n          >\r\n            <div\r\n              style={{\r\n                background: `white`,\r\n                border: `1px solid #ccc`,\r\n                padding: 15\r\n              }}\r\n            >\r\n              <h1>Overlay View</h1>\r\n              <button\r\n                onClick={props.onClicked}\r\n                style={{ left: \"91%\", top: \"10%\", position: \"absolute\" }}\r\n              >\r\n                X\r\n              </button>\r\n              <DataPanel\r\n                items={[\r\n                  { name: \"road seg type\", value: \"intersection\" },\r\n                  { name: \"terrain type\", value: \"built up\" },\r\n                  { name: \"road type\", value: \"normal\" }\r\n                ]}\r\n              />\r\n            </div>\r\n          </OverlayView>\r\n        )}\r\n      </Marker>\r\n    )}\r\n  </GoogleMap>\r\n));\r\n\r\nconst mapCss = css({\r\n  width: \"100%\"\r\n});\r\n\r\nexport default props => (\r\n  <div className={`${islandCss} ${mapCss}`}>\r\n    <Map\r\n      googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyD64mBstzTUD74x9B8ZZc5jp2gQvHWeBHk\"\r\n      loadingElement={<div />}\r\n      containerElement={<div style={{ height: \"100%\", width: \"100%\" }} />}\r\n      mapElement={<div style={{ height: \"100%\", width: \"100%\" }} />}\r\n    />\r\n  </div>\r\n);\r\n"]},"metadata":{},"sourceType":"module"}